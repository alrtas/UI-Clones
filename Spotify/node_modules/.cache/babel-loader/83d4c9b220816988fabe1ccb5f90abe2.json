{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\th052070\\\\Desktop\\\\Clones\\\\spotify-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { getTokenFromURL } from './spotify';\nimport Login from './Login';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [{\n    user,\n    tk\n  }, dispatch] = useDataLayerValue({}); //Run code base on a given condition\n\n  useEffect(() => {\n    const hash = getTokenFromURL();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      setToken(_token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n    }\n  }, []);\n  console.log(tk);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: tk ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d+CHo6529KRRZalIALC5o+jZ4XA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/th052070/Desktop/Clones/spotify-clone/src/App.js"],"names":["React","useEffect","useState","SpotifyWebApi","getTokenFromURL","Login","Player","useDataLayerValue","spotify","App","token","setToken","user","tk","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA2C,oBAA3C;AACA,SAASC,eAAT,QAA2C,WAA3C;AACA,OAAOC,KAAP,MAA2C,SAA3C;AACA,OAAOC,MAAP,MAA2C,UAA3C;AACA,SAAQC,iBAAR,QAA2C,aAA3C;;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AAEA,SAASM,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAcC,QAAd,IAA0BP,iBAAiB,CAAC,EAAD,CAAjD,CAHa,CAKb;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,IAAI,GAAGX,eAAe,EAA5B;AACAY,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EACA;AACEJ,MAAAA,QAAQ,CAAE;AACRM,QAAAA,IAAI,EAAE,WADE;AAERV,QAAAA,KAAK,EAAEQ;AAFC,OAAF,CAAR;AAIAP,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACAV,MAAAA,OAAO,CAACa,cAAR,CAAuBH,MAAvB;AAEAV,MAAAA,OAAO,CAACc,KAAR,GAAgBC,IAAhB,CAAsBX,IAAD,IAAU;AAC7BE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAC,UADE;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OALD;AAMD;AACF,GArBQ,EAqBN,EArBM,CAAT;AAsBFY,EAAAA,OAAO,CAACC,GAAR,CAAYZ,EAAZ;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIA,EAAE,gBACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALP;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCQJ,G;UAGyBF,iB;;;KAHzBE,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport SpotifyWebApi                  from \"spotify-web-api-js\"\nimport { getTokenFromURL }            from './spotify';\nimport Login                          from './Login'\nimport Player                         from './Player'\nimport {useDataLayerValue}            from './DataLayer'\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const [token, setToken] = useState(null)\n  const [{ user, tk },dispatch] = useDataLayerValue({})\n  \n  //Run code base on a given condition\n  useEffect(() => {\n    const hash = getTokenFromURL()\n    window.location.hash = \"\"\n    const _token = hash.access_token\n\n    if(_token)\n    {\n      dispatch ({\n        type: 'SET_TOKEN',\n        token: _token,\n      })\n      setToken(_token)\n      spotify.setAccessToken(_token)\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type:'SET_USER',\n          user: user,\n        })\n      })\n    }\n  }, [])\nconsole.log(tk)\n\n  return (\n    <div className=\"app\">\n      {\n        tk ? \n          (<Player />) \n          : \n          (<Login />)\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}