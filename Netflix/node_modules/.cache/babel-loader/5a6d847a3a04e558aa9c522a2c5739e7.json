{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\th052070\\\\Desktop\\\\Clones\\\\netflix-clone\\\\src\\\\components\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `row__posters ${isLargeRow && \"row_posterLarger\"}`,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row__poster\",\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/th052070/Desktop/Clones/netflix-clone/src/components/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAb,EAA4C;AAAA;;AAExC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAOP,CAACJ,QAAD,CAPO,CAAT;AAQAS,EAAAA,OAAO,CAACC,KAAR,CAAcR,MAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAI,gBAAeE,UAAU,IAAI,kBAAmB,EAAlE;AAAA,gBACGC,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACX;AAAK,QAAA,SAAS,EAAC,aAAf;AAEI,QAAA,GAAG,EAAG,GAAEf,QAAS,GAAEI,UAAU,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAF5E;AAGI,QAAA,GAAG,EAAEF,KAAK,CAACG;AAHf,SACSH,KAAK,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,cADL;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA5BQlB,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport axios from '../axios'\r\nimport './Row.css'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    \r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            return request\r\n        }\r\n        fetchData()\r\n    },[fetchUrl])\r\n    console.table(movies)\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className= {`row__posters ${isLargeRow && \"row_posterLarger\"}`}>\r\n              {movies.map(movie => (\r\n                    <img className=\"row__poster\" \r\n                        key={movie.id}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt={movie.name}\r\n                    />\r\n              ))}  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row"]},"metadata":{},"sourceType":"module"}